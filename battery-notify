#!/usr/bin/env bash

# Copyright (c) 2024 Jordi Marqu√©s
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -eu

source_libs() {
    declare -g progpath
    declare -g progname

    # shellcheck disable=SC2034
    progname="${0##*/}"

    if [[ ! "${0}" == *"/"* ]]; then # path not available (ie: bash script)
        progpath="$(command -v "${0}")"
        progpath="${progpath%/*}"

    elif [[ "${0%/*}" == "" ]]; then # program on root
        progpath="/"
    else
        progpath="${0%/*}" # program not on root
    fi
    # shellcheck disable=SC1091
    . "${progpath}/rmt-lib.sh"
}

notify() {
    local -i r1 g1 b1 r2 g2 b2 steps repetitions repetition
    local notify_id
    local wait

    notify_id="${1}"
    read -r r1 g1 b1 r2 g2 b2 steps wait repetitions <<<"${notifications["${notify_id}"]}"

    for ((repetition = 0; repetition < repetitions; repetition++)); do
        hidraw_leds_transition \
            "${r1}" "${g1}" "${b1}" "${r2}" "${g2}" "${b2}" "${steps}" "${wait}"
    done
    hidraw_leds_set 0 0 0
}

daemon() {
    local -i previous
    local notify_id
    local sign
    local value
    local -i capacity

    # shellcheck disable=SC2154
    battery_capacity_get && capacity="${__return}"
    previous=capacity

    while sleep 30; do
        battery_capacity_get && capacity="${__return}"

        for notify_id in "${!notifications[@]}"; do
            [[ "${notify_id}" =~ ^([+-])([0-9]+)$ ]]
            sign="${BASH_REMATCH[1]}"
            value="${BASH_REMATCH[2]}"
            if [[ "${value}" == "${previous}" ]]; then
                if [[ "${sign}" == "+" && capacity -gt previous ]]; then
                    notify "${notify_id}"
                    break
                elif [[ "${sign}" == "-" && capacity -lt previous ]]; then
                    notify "${notify_id}"
                    break
                fi
            fi
        done

        previous=capacity
    done
}

main() {
    local -i capacity
    local -A notifications=()

    #                      r1  g1  b1  r2  g2  b2 steps  wait repetitions
    notifications["+94"]="  0   0   0   0  80   0    20 0.080           1"
    notifications["+65"]="  0   0   0   0   0  80    20 0.080           1"
    notifications["+32"]="  0   0   0  80   0   0    20 0.080           1"
    notifications["-34"]=" 80   0   0   0   0   0    20 0.080           1"
    notifications["-17"]=" 80   0   0   0   0   0    20 0.040           2"
    notifications["-5"]="  80   0   0   0   0   0    20 0.016           4"

    daemon
}

source_libs
main "${@}"
