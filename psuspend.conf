# This file is sourced by psuspend (bash) script.
#
# shellcheck disable=SC2034,SC2148

# Systemd services to be stopped.
systemd_services=(
    "exim4"
    "ntpd"
    "uptimed"
    "bluetooth"
    "zerotier-one"
    "cron"
    "atd"
)

# Path to a /dev/input device. Set only to override using the computer default one.
# input_device="/dev/input/by-id/my_custom_device"

# Sequence of keys that trigger suspend/resume. Use evdev names.
keys=(
    "KEY_LEFTCTRL"
    "KEY_F1"
)

# Enabled modules
modules=(
    "network"
    "systemd"
    "session_freeze"          # Freeze user sessions, except for root.
    "session_freeze_root"     # Freeze root sessions.
    "display"
    "cpu"
    # "keyboard_leds_resume"  # On resume set leds, needs setting keyboard_leds_resume variable
)

# Keyboard leds, array of 3 integer numbers range 0 - 255.
# keyboard_leds_resume=("0" "0" "50")

# Virtual terminal to switch to on suspend, must be a text non-graphical for screen to blank.
display_vt=3

# Custom modules can be added here, example, add a module named foo, that suspends/resumes foo:
# module_foo() {
#     case "${1}" in
#         "suspend")
#             echo "Suspend foo"
#             echo 1 > /path/disable_foo
#             ;;
#         "resume")
#             echo "Resume foo"
#             echo 0 > /path/disable_foo
#             ;;
#     esac
# }
# modules+=("foo")

# vim: set ft=sh:
